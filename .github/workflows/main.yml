name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  # schedule:
  #   - cron: '04 04 * * 0'

jobs:

  build:
    needs: test_dockerfile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push - gcp-devops
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/gcp-devops-image:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: gcp-devops

      - name: Build and push - aws-devops
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/aws-devops-image:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          target: aws-devops

    # strategy:
    #   matrix:
    #     platform:
    #       - linux/amd64
    #       - linux/arm64

  test_dockerfile:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build base image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true # Load the image into the local Docker daemon
          tags: base-image:latest
          target: base
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run tests in container
        run: |
          docker run --rm base-image:latest sh -c " \
            git --version && \
            python3 --version && \
            terraform version && \
            kubectl version --client && \
            packer --version && \
            terragrunt --version && \
            tflint --version && \
            tfsec --version \
          "
